// import mongoose, { Schema, Document } from "mongoose";

// // Define the interface for the Design document
// interface IAccess {
//     userId: mongoose.Types.ObjectId; // Reference to the User
//     permissions: "edit" | "view"; // Enum for permissions
// }

// interface IDesign extends Document {
//     user: mongoose.Types.ObjectId; // Reference to the User
//     folder: string; // Unique folder name
//     category: string; // Category the design belongs to
//     code: string; // Code given by the user
//     hash: string; // Hash generated by the system
//     revisions: mongoose.Types.ObjectId[]; // Array of references to Revision
//     selectedPage: string; // Selected page
//     accessTo: IAccess[]; // Array of access permissions
//     info: any; // Mixed type for additional info
//     structure: any; // Mixed type for structure
//     derivedDesigns: mongoose.Types.ObjectId[]; // Array of references to Design
// }

// // Define the Design schema
// const DesignSchema = new Schema<IDesign>({
//     user: {
//         type: mongoose.Schema.Types.ObjectId, // Use Schema.Types.ObjectId
//         required: true,
//         ref: 'User', // Corrected reference
//     },
//     folder: {
//         type: String,
//         required: true,
//         unique: true,
//     },
//     category: {
//         type: String,
//         required: true,
//     },
//     code: {
//         type: String,
//         required: true,
//     },
//     hash: {
//         type: String,
//         required: true,
//     },
//     revisions: [
//         {
//             type: mongoose.Schema.Types.ObjectId,
//             ref: "Revision",
//         },
//     ],
//     selectedPage: {
//         type: String,
//         required: true,
//     },
//     accessTo: [
//         {
//             userId: { type: mongoose.Schema.Types.ObjectId, ref: "User " }, // Corrected reference
//             permissions: { type: String, enum: ["edit", "view"], default: "view" },
//         },
//     ],
//     info: {
//         type: Schema.Types.Mixed,
//         required: true,
//     },
//     structure: {
//         type: Schema.Types.Mixed,
//         required: true,
//     },
//     derivedDesigns: [
//         {
//             type: mongoose.Schema.Types.ObjectId,
//             ref: "Design",
//         },
//     ],
// }, { timestamps: true });

// // Export the Design model
// export default mongoose.model<IDesign>('Design', DesignSchema);


// // Example of creating a new design
// // const createDesign = async () => {
// //     const newDesign = await Design.create({
// //         user: someUser Id,
// //         folder: "Design Folder",
// //         category: "Category 1",
// //         code: "Design Code",
// //         hash: "Generated Hash",
// //         revisions: [],
// //         selectedPage: "Page 1",
// //         accessTo: [{ userId: someUser Id, permissions: "edit" }],
// //         info: { /* additional info */ },
// //         structure: { /* structure data */ },
// //         derivedDesigns: [],
// //     });
// //     return newDesign;
// // };